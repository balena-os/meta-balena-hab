#!/bin/sh

# shellcheck disable=SC1091
. /usr/libexec/os-helpers-logging
. /usr/libexec/os-helpers-fs
. /usr/libexec/os-helpers-sb
. /usr/sbin/balena-config-defaults

# Give a chance to the by-state directory to appear
# We do not expect any particular device or partition to come up
# but if balenaOS is correctly configured on the device the by-state
# directory will eventually be created by the custom udev rule.
# This is useful if the rootfs is on a device that takes a while
# to initialize such as a USB disk.
wait4file "/dev/disk/by-state" "${bootparam_rootdelay:-0}"
BALENA_NONENC_BOOT_DEV=""

cryptsetup_enabled() {
    # Flasher should not try to unlock the partitions
    if [ "$bootparam_flasher" = "true" ]; then
        return 1
    fi

    # Ensure that secure boot is enabled and device is locked
    if ! is_secured; then
        return 1
    fi

    BALENA_NONENC_BOOT_DEV=$(get_state_path_from_label @@BALENA_NONENC_BOOT_LABEL@@)
    # Only run if the boot partition is split
    if [ ! -e "$BALENA_NONENC_BOOT_DEV" ]; then
        return 1
    fi

    return 0
}

cryptsetup_run() {
    TMP_MOUNT_DIR=$(mktemp -d)
    _tmpkey="ikey"
    # Configured in the keyctl-caam source
    _keydir="/tmp/keys"
    mount "$BALENA_NONENC_BOOT_DEV" "$TMP_MOUNT_DIR"

    for keyfile in "$TMP_MOUNT_DIR"/balena_*.enc; do
        if [ ! -e "${keyfile}" ]; then
            fail "No encryption key available"
        fi

        if ! caam-keygen import "${keyfile}" "${_tmpkey}"; then
            fail "Failed to import encryption key"
        fi
        _keyfile_base=$(basename "${keyfile}")
        _ksize=${_keyfile_base#balena_}
        _ksize=${_ksize%.enc}
    done

    if [ -f ${_keydir}/${_tmpkey} ]; then
        keyctl padd logon logkey: @u < ${_keydir}/${_tmpkey}
    else
        fail "Imported key not found"
    fi

    BOOT_DEVICE=$(lsblk -nlo pkname "${BALENA_NONENC_BOOT_DEV}")
    UNLOCKED=""
    for PART_DEV in $(lsblk -nlo kname,type "/dev/${BOOT_DEVICE}" | grep part | awk '{print $1}'); do
        PART_NAME=$(lsblk -nlo partlabel "/dev/${PART_DEV}")
        if [ "${PART_NAME}" = "${BALENA_NONENC_BOOT_LABEL}" ]; then
            continue
        fi
        _valid_partlabels="resin-boot resin-rootA resin-rootB resin-state resin-data"
        case " ${_valid_partlabels} " in
            *" ${PART_NAME} "*) ;;
            *) fail "Trying to mount unknown partition label ${PART_NAME}";;
        esac
        _size=$(lsblk -nb -o NAME,SIZE "/dev/${PART_DEV}" | awk '{ print $2 }')
        _sectors=$( expr "$_size" / 512 )
        if ! dmsetup -v create "${PART_NAME}" --table "0 $_sectors crypt capi:tk(cbc(aes))-plain :$_ksize:logon:logkey: 0 /dev/${PART_DEV} 0 1 sector_size:512"; then
            fail "Failed to unlock encrypted partition ${PART_DEV}"
        fi
        UNLOCKED="${UNLOCKED} ${PART_NAME}"
    done

    # Wait for udev processing of each unlocked device
    for DM_NAME in ${UNLOCKED}; do
        wait4udev "/dev/mapper/${DM_NAME}"
    done

    # udev rules run after dmsetup but there is a race condition between
    # dm rules and the balena state rules that results in state links
    # not being created. Needs more investigation, but for the time being
    # re-run them here.
    udevadm trigger

    umount "$TMP_MOUNT_DIR"
    rmdir "$TMP_MOUNT_DIR"
}
